apply plugin: 'com.android.application'

def gitTag = 'git describe --tags --always'.execute([], project.rootDir).text.trim()
def gitCommitCount =
        Integer.parseInt('git rev-list --count HEAD'.execute([], project.rootDir).text.trim())

android {
    signingConfigs {
        release {
        }
    }
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.arangurr.newsonar"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode gitCommitCount
        versionName gitTag
    }
    buildTypes {
        debug {
            minifyEnabled false
            applicationIdSuffix ".debug"
            resValue "string", "nearby_api_key", getApiKeyDebug()
        }

        release {
            debuggable false
            minifyEnabled false
            resValue "string", "nearby_api_key", getApiKeyRelease()
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:25.3.0'
    compile 'com.android.support:design:25.3.0'
    compile 'com.google.android.gms:play-services-nearby:10.2.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.google.code.gson:gson:2.7'
}

// https://gist.github.com/curioustechizen/9f7d745f9f5f51355bd6
def getApiKeyDebug() {
    def Properties props = new Properties()
    props.load(new FileInputStream(new File('secrets.properties')))
    return props['API_KEY_DEBUG']
}

def getApiKeyRelease() {
    def Properties props = new Properties()
    props.load(new FileInputStream(new File('secrets.properties')))
    return props['API_KEY_RELEASE']
}

allprojects {
    afterEvaluate { project ->
        def propsFile = rootProject.file('secrets.properties')
        def configName = 'release'

        if (propsFile.exists() && android.signingConfigs.hasProperty(configName)) {
            def props = new Properties()
            props.load(new FileInputStream(propsFile))
            android.signingConfigs[configName].storePassword = props['storePassword']
            android.signingConfigs[configName].storeFile = file(props['storeFile'])
            android.signingConfigs[configName].keyAlias = props['keyAlias']
            android.signingConfigs[configName].keyPassword = props['keyPassword']
        }
    }
}
